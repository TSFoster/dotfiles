#!/usr/bin/env fish

if [ $OS = Mac ]
  echo '-> Homebrew'
  brew update
  brew bundle --file=$configDir/meta/Brewfile
  read --prompt-str='Install GUI apps (y/n)? ' --nchars=1 installGui
  [ $installGui = y ]; and brew bundle --file=$configDir/meta/apps.Brewfile
else
  echo 'Skipped homebrew packages' >&2
end

echo '-> mac-cli'
curl -fsSL https://raw.githubusercontent.com/guarinogabriel/mac-cli/master/mac-cli/tools/install | sh

echo '-> Rust'

not command -s rustup > /dev/null
and command -s rustup-init > /dev/null
and rustup-init

if command -s rustup > /dev/null
  rustup update
  rustup component add rls rust-analysis rust-src rustfmt clippy
else
  echo 'Skipped Rust packages' >&2
end


echo '-> Node'
if command -s npm > /dev/null
  npm update -g
  set npmPackages \
    eslint \
    fkill-cli \
    fsevents \
    git-open \
    hostile \
    htmlhint \
    machine-share \
    markdownlint \
    ndb \
    netlify-cli \
    node-gyp \
    now \
    postcss \
    prettier \
    svgo \
    tern \
    tldr \
    uglify-js \
    yo
  [ -d '/Applications/Alfred 3.app/' ]; and set npmPackages alfred-fkill $npmPackages
  npm install --global $npmPackages
else
  echo 'Skipped node packages' >&2
end


[ -f $configDir/git/credentials.gitconfig ]
or touch $configDir/git/credentials.gitconfig


echo '-> Go'
if command -s go > /dev/null
  mkdir -p "$dataDir/go"
  go get -u github.com/arial7/golorem
  go get -u github.com/mrtazz/checkmake
  go get -u github.com/mattn/efm-langserver
else
  echo 'Skipped go setup and go packages' >&2
end


echo '-> Elm'
if command -s npm > /dev/null
  npm install --global \
    elm \
    elm-analyse \
    elm-doc \
    elm-doc-preview \
    elm-format \
    elm-github-install \
    elm-help \
    elm-json \
    elm-license-finder \
    elm-live \
    elm-markup \
    elm-oracle \
    elm-test \
    elm-xref \
    @elm-tooling/elm-language-server
else
  echo 'Skipped elm packages' >&2
end


echo '-> Python'

if command -s pip3  > /dev/null
  pip3 install \
    dns-lexicon
  pip3 install --user \
    ansible \
    ansible-lint \
    yamllint \
    vint
else
  echo 'Skipped pip3 packages' >&2
end


echo '-> Ruby'

set --universal --export IRBRC $configDir/irb/irbrc 2>/dev/null
set --universal --export PRYRC $configDir/pry/pryrc 2>/dev/null

[ $OS = Mac ]
and [ -d /Library/Ruby/Gems ]
and sudo chown -R $USER /Library/Ruby/Gems

if command -s gem > /dev/null
  gem install --conservative \
    awesome_print \
    pry \
    htmlbeautifier
else
  echo 'Skipped Ruby packages' >&2
end


# -> Ctags
mkdir -p $HOME/.ctags.d
echo "--options=$configDir/ctags/" > $HOME/.ctags.d/config.ctags
