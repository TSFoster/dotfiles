#!/usr/bin/env zsh

CONFIG="$HOME/.config"
DATA="$HOME/.local/share"
mkdir -p "$DATA"


# Helper functions
# Check if given command is executable
exists () { type "$1" >/dev/null 2>/dev/null }


# Set theme file (light/dark)
[ -f "$CONFIG/theme" ] || echo 'light' > "$CONFIG/theme"
THEME="$(cat "$CONFIG/theme")"


# Put OS type in $OS
OS="$($CONFIG/meta/bin/os_name)"
# Warn about incompleteness of script for non-macOS systems
[ "$OS" = 'Mac' ] || echo "This is not a Mac! Skipping some sections of this script. Some other assumptions about available tools may be incorrect."
# Ensure Xcode CLI tools are setup
[ "$OS" = 'Mac' ] && sudo xcodebuild -license accept


# Install homebrew and applications
if [ "$OS" = 'Mac' ]; then
  if ! exists brew; then
    echo "Installing homebrew…"
    /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
    echo "\n"
  fi

  echo "Checking required homebrew packages are installed…\n"
  BREW_INSTALLED="$(brew list)"
  for pkg (
    fish
    fzf
    gawk
    git
    hub
    mobile-shell
    neovim
    python
    python3
    the_silver_searcher
    yarn
  ); do
    grep -q "^$pkg\$" <(echo "$BREW_INSTALLED") \
      && echo "$pkg already installed" \
      || brew install $pkg
  done
  echo "\n"

  echo "Checking required homebrew cask packages are installed…\n"
  CASK_INSTALLED="$(brew cask list)"
  for pkg (
    alfred
    bartender
    beardedspice
    coda
    dash
    dropbox
    hammerspoon
    iterm2
    karabiner-elements
    spotify
    tower
    transmission
    transmit
    transmit-disk
    vyprvpn
  ); do
    grep -q "^$pkg\$" <(echo "$CASK_INSTALLED") \
      && echo "$pkg already installed" \
      || brew cask install $pkg
  done
else
  echo "Skipping automatic installation of packages."
fi

echo "\n"

if [ "$OS" = 'Mac' ]; then
  SOUNDS="$HOME/Library/Sounds"
  echo "Installing sounds…"
  sudo mkdir -p "$SOUNDS"
  sudo chown toby "$SOUNDS"
  for f in "$CONFIG/meta/sounds/"*.aif; do
    cp -f "$f" "$SOUNDS/$(basename "$f")"
  done
  echo "\n"
fi

if exists fish; then
  # Set fish as default shell
  FISH_LOCATION="$(which fish)"
  if ! grep -q "^$FISH_LOCATION\$" /etc/shells; then
    echo "Fish is installed but not on available shells list. Adding and making default …"
    echo "$FISH_LOCATION" | sudo tee -a /etc/shells
    chsh -s "$FISH_LOCATION"
  else
    echo "Fish is already on available shells list. If not already default, please run: chsh -s $FISH_LOCATION"
  fi

  echo "\n"
  
  # Install Oh My Fish
  if ! [ -d "$DATA/omf" ]; then
    echo "Installing Oh My Fish…"
    fish <(curl -L https://get.oh-my.fish) --config="$CONFIG/omf" --path="$DATA/omf"
  fi

  FISHER_FILE="$CONFIG/omf/functions/fisher.fish"
  if ! [ -f "$FISHER_FILE" ]; then
    echo "Downloading fisher…"
    curl -L https://git.io/fisher > "$FISHER_FILE"
    echo ""
  fi
  echo "Installing fisherman plugins…\n"
  fish -c 'fisher'

  echo "\n"

  echo "Setting fish universal variables…\n"
  fish -c 'set -U FZF_LEGACY_KEYBINDINGS 0'
  fish -c 'set -U theme_display_ruby no'
  fish -c 'set -U theme_display_date no'
  fish -c 'set -U theme_display_cmd_duration no'
  fish -c 'set -U theme_nerd_fonts yes'

else
  echo "Warning: Fish is not installed!"
fi

echo "\n"

# Set up git
echo "Setting up git…\n"
[ "$OS" = 'Mac' ] && ! exists gittower && echo 'gittower still needs to be installed (you can do this from the app’s preferences)'
[ -f "$CONFIG/git/credentials.gitconfig" ] || touch "$CONFIG/git/credentials.gitconfig"

echo "\n"

# Set up neovim
echo "Setting up neovim…\n"
mkdir -p "$DATA/nvim/sessions"
exists pip3 && pip3 install neovim && pip3 install neovim-remote
exists pip2 && pip2 install neovim
[ -f "$DATA/nvim/site/autoload/plug.vim" ] || curl -fLo "$DATA/nvim/site/autoload/plug.vim" --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
[ -d "$DATA/nvim/plugged" ] || nvim +PlugInstall

echo "\n"

# Set up Hammerspoon
if [ "$OS" = 'Mac' ]; then
  echo "Setting up Hammerspoon…\n"
  defaults write org.hammerspoon.Hammerspoon MJConfigFile "$CONFIG/hammerspoon/init.lua"
  if [ ! -f "$CONFIG/maildir" ] || [ ! -d "$HOME/Library/Mail/V$(cat "$CONFIG/maildir")" ]; then
    read "reply?If you want mail integration, enter the mailbox version number, followed by a slash and the mailbox ID (e.g. 5/CFEC8F32-F1F3-4F20-FFB0-28213FC83240):"
    if [ -d "$HOME/Library/Mail/V$reply" ]; then
      echo "$reply" > $CONFIG/maildir
    else
      echo "Mail integration not set up. To configure later, run this script again"
    fi
  fi
  echo "\n"
fi

# Set up Ruby
echo "Setting up Ruby…\n"
if exists fish; then
  fish -c "set -Ux IRBRC $CONFIG/irb/irbrc" 2> /dev/null
  fish -c "set -Ux PRYRC $CONFIG/pry/pryrc" 2> /dev/null
fi
[ "$OS" = 'Mac' ] && sudo chown -R "$USER" /Library/Ruby/Gems
echo "Checking required gems are installed…\n"
GEM_INSTALLED="$(gem list)"
for pkg (
  awesome_print
  pry
  neovim
); do
  grep -q "^$pkg (" <(echo "$GEM_INSTALLED") \
    && echo "$pkg already installed" \
    || gem install $pkg
done

echo "\n"

# Set up Editorconfig
echo "Setting up Editorconfig…\n"
sudo cp "$CONFIG/meta/editorconfig" /.editorconfig

echo "\n"

# Set up node
echo "Setting up node"
yarn global add fkill-cli
[ "$OS" = 'Mac' ] && yarn global add alfred-fkill
