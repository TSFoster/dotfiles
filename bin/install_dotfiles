#!/usr/bin/env zsh

# Only link files if they aren't already
function link_unlinked {
  if ! [ $1 -ef $2 ]; then ln -i $1 $2; fi
}

cd $HOME

# Not interested in welcome messages
touch .hushlogin

# Ensure hidden directories in home folder exist
rm -rf .hammerspoon
rm -rf .config/fish/functions
mkdir -p .config/nvim/autoload
mkdir -p .config/nvim/sessions
mkdir -p .config/fish/functions
mkdir -p .config/fish/completions
mkdir -p .completion
mkdir -p .tmux/plugins
mkdir -p .tmuxinator
mkdir -p .hammerspoon

if ! [ -d ".config/omf" ]; then
    curl -L https://get.oh-my.fish | fish
fi

if ! [ -d ".tmux/plugins/tpm" ]; then
  git clone https://github.com/tmux-plugins/tpm .tmux/plugins/tpm
fi

if ! [ -f ".completion/npm.zsh" ]; then
  npm completion > .completion/npm.zsh
fi
if ! [ -f ".completion/src/_t" ]; then
  TIMETRAPCOMPLETION=$(locate '*/timetrap*/completions/zsh/_t' | head -n 1)
  if [ -n "$TIMETRAPCOMPLETION" ]; then ln $TIMETRAPCOMPLETION .completion/src/_t; fi
fi
ZSHCOMP=.completion/zsh-completions
if ! [ -d "$ZSHCOMP" ]; then
  git clone git://github.com/zsh-users/zsh-completions.git $ZSHCOMP
fi
cd $ZSHCOMP
git pull
cd -


# Set machine-specific variables and paths
# Machine name is used when SSHing in to it
if ! [ -f ".machine.zsh" ]; then
  read "reply?Enter machine name: $(find .dotfiles/zsh/machines/*.zsh | awk 'BEGIN { FS = "[/|.]" } {printf "'%s', ", $5}')or another for a new machine: "
  file=".dotfiles/zsh/machines/${reply}.zsh"
  echo "file: $file"
  if ! [ -f $file ]; then
    read "symbol?New machine '$reply' needs a phrase or symbol to identify it (leave blank for '$reply'): "
    if ! [ -n "$symbol" ]; then symbol=$reply; fi
    printf "machineName='$symbol'" > $file
  fi
  ln $file .machine.zsh
fi

cd .dotfiles

if ! [ -f ../.machine-private.zsh ]; then
  cp zsh/machine-private.zsh ../.machine-private.zsh
fi

link_unlinked git/home.gitconfig   ../.gitconfig
link_unlinked zsh/home.inputrc     ../.inputrc
link_unlinked zsh/home.zshenv      ../.zshenv
link_unlinked zsh/home.zshrc       ../.zshrc
link_unlinked tmux/home.tmux.conf  ../.tmux.conf
link_unlinked irb/home.irbrc       ../.irbrc
link_unlinked nvim/init.vim        ../.config/nvim/init.vim
link_unlinked nvim/plug.vim        ../.config/nvim/autoload/plug.vim
link_unlinked hammerspoon/init.lua ../.hammerspoon/init.lua
link_unlinked home.editorconfig    ../.editorconfig
link_unlinked fish/config.fish     ../.config/fish/config.fish
link_unlinked fish/fishfile        ../.config/fish/fishfile
for f in tmux/sessions/*.yml; do
  link_unlinked "$f" "../.tmuxinator/$(basename "$f")"
done
for f in fish/completions/*.fish; do
  link_unlinked "$f" "../.config/fish/completions/$(basename "$f")"
done

fish -c 'set -U theme_color_scheme base16-light'
fish -c 'set -U FZF_LEGACY_KEYBINDINGS 0'
fish -c 'set -U theme_display_ruby no'
fish -c 'set -U theme_display_date no'
fish -c 'set -U theme_display_cmd_duration no'
fish -c 'set -U theme_nerd_fonts yes'
fish -c 'fisher'
