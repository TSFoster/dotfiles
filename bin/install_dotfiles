#!/bin/sh

function link_unlinked {
  if ! [ $1 -ef $2 ]; then ln -i $1 $2; fi
}

cd $HOME

# Not interested in welcome messages
touch .hushlogin

# Ensure hidden directories in home folder exist
mkdir -p .config
mkdir -p .vim/bundle
mkdir -p .tmuxinator

# Approximate ln -i with directory (can't symlink, powerline won't work)
# Only ask to replace if ~/.config/powerline directory
# exists and differs (apart from .pyc files)
if [ -d ".config/powerline" ] && [ -n "$(diff -r --exclude='*.pyc' .dotfiles/powerline .config/powerline)" ]; then
  read -p "replace powerline? " reply
  case $reply in
      [Yy]* ) rm -rf .config/powerline;;
      * ) echo 'not replaced';;
  esac
fi
if ! [ -d ".config/powerline" ]; then
  cp -r .dotfiles/powerline .config
fi

if [ -d ".vim/bundle" ]; then
  read -p "reinstall all vim extensions? (may take a while) " reply
  case $reply in
      [Yy]* ) rm -rf .vim/bundle;;
      * ) echo 'no change';;
  esac
fi
if ! [ -d ".vim/bundle" ]; then
  git clone https://github.com/gmarik/Vundle.vim.git .vim/bundle/Vundle.vim
  vim -u .dotfiles/vim/vundle.vimrc +PluginInstall +qall
fi

cd .dotfiles

# Only link files if they aren't already
link_unlinked git/home.gitconfig  ../.gitconfig
link_unlinked shell/home.inputrc  ../.inputrc
link_unlinked tmux/home.tmux.conf ../.tmux.conf
link_unlinked irb/home.irbrc      ../.irbrc
link_unlinked vim/home.vimrc      ../.vimrc
for f in tmux/sessions/*.yml; do
  link_unlinked "$f" "../.tmuxinator/$(basename "$f")"
done

# If we're on a Mac
if uname | grep -q 'Darwin'; then
  mkdir -p ../Library/Scripts
  cd applescript
  for scpt in *.scpt; do
    link_unlinked "../../Library/Scripts/$scpt" "$scpt"
  done
fi
